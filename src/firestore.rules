rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Default Deny: By default, no one can access anything.
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow creating OTPs during signup for unauthenticated users
    match /otps/{email} {
      allow create, update: if true;
    }

    // Allow public read access for specific collections needed for the public site.
    // This allows unauthenticated users to view content on the homepage, etc.
    match /blogPosts/{postId} {
      allow get, list: if true;
      allow create, update, delete: if request.auth != null && request.auth.token.role == 'admin';
    }

    match /events/{eventId} {
      allow get, list: if true;
      allow create, update, delete: if request.auth != null && request.auth.token.role == 'admin';
    }

    match /leaders/{leaderId} {
      allow get, list: if true;
      allow create, update, delete: if request.auth != null && request.auth.token.role == 'admin';
    }

    // Secure user data
    match /users/{userId} {
      // Allow users to read and update their own data.
      allow read, update: if request.auth != null && request.auth.uid == userId;
      // Admins can view any user's data.
      allow get, list: if request.auth != null && request.auth.token.role == 'admin';
    }
    
    // Secure notifications
    match /notifications/{notificationId} {
      // Allow users to read their own notifications or global notifications
      allow read, list: if request.auth != null && (resource.data.userId == request.auth.uid || resource.data.userId == null);
      // Allow users to delete their own notifications
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;
      // Admins can create notifications
      allow create: if request.auth != null && request.auth.token.role == 'admin';
    }

    // Secure other collections to be accessible only by authenticated users (or admins)
    match /prayerRequests/{requestId} {
      allow read, list, create: if request.auth != null;
      allow update: if request.auth != null; // To increment prayer count
    }
    
    match /sermons/{sermonId} {
        allow get, list: if request.auth != null;
        allow create, update, delete: if request.auth != null && request.auth.token.role == 'admin';
    }

    match /communityGroups/{groupId} {
        allow get, list: if request.auth != null;
        allow create, update, delete: if request.auth != null && request.auth.token.role == 'admin';
    }

    // All other collections that need to be public-readable can be added here.
    // Example:
    // match /publicContent/{docId} {
    //   allow get, list: if true;
    // }
  }
}
